services:
  web:
    container_name: springboot3demo
    build:
      context: ./springboot3demo
      dockerfile: web.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_USER_PASSWORD}
    volumes:
      - ./springboot3demo/logs:/logs
    depends_on:
      mysqldb:
        condition: service_healthy
    networks:
      - springboot-mysql-network

  mysqldb:
    image: mysql:5.7
    container_name: springboot3demo_database
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-authentication-plugin=caching_sha2_password'
    ]
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      # 关键：挂载 SQL 脚本到初始化目录（自动执行）
      - ./demo_init.sql:/docker-entrypoint-initdb.d/init.sql
      # 数据持久化
      - mysql_data:/var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s

networks:
  springboot-mysql-network:
    name: springboot-mysql-network


# 数据卷声明（持久化 MySQL 数据）
volumes:
  mysql_data: